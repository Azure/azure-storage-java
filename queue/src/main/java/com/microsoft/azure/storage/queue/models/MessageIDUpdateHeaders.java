/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * <p>
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.microsoft.azure.storage.queue.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;
import com.microsoft.rest.v2.DateTimeRfc1123;

import java.time.OffsetDateTime;

/**
 * Defines headers for Update operation.
 */
@JacksonXmlRootElement(localName = "MessageID-Update-Headers")
public final class MessageIDUpdateHeaders {
    /**
     * This header uniquely identifies the request that was made and can be
     * used for troubleshooting the request.
     */
    @JsonProperty(value = "x-ms-request-id")
    private String requestId;

    /**
     * Indicates the version of the Queue service used to execute the request.
     * This header is returned for requests made against version 2009-09-19 and
     * above.
     */
    @JsonProperty(value = "x-ms-version")
    private String version;

    /**
     * UTC date/time value generated by the service that indicates the time at
     * which the response was initiated.
     */
    @JsonProperty(value = "Date")
    private DateTimeRfc1123 date;

    /**
     * The pop receipt of the queue message.
     */
    @JsonProperty(value = "x-ms-popreceipt")
    private String popReceipt;

    /**
     * A UTC date/time value that represents when the message will be visible
     * on the queue.
     */
    @JsonProperty(value = "x-ms-time-next-visible")
    private DateTimeRfc1123 timeNextVisible;

    /**
     * Get the requestId value.
     *
     * @return the requestId value.
     */
    public String requestId() {
        return this.requestId;
    }

    /**
     * Set the requestId value.
     *
     * @param requestId
     *         the requestId value to set.
     *
     * @return the MessageIDUpdateHeaders object itself.
     */
    public MessageIDUpdateHeaders withRequestId(String requestId) {
        this.requestId = requestId;
        return this;
    }

    /**
     * Get the version value.
     *
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Set the version value.
     *
     * @param version
     *         the version value to set.
     *
     * @return the MessageIDUpdateHeaders object itself.
     */
    public MessageIDUpdateHeaders withVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get the date value.
     *
     * @return the date value.
     */
    public OffsetDateTime date() {
        if (this.date == null) {
            return null;
        }
        return this.date.dateTime();
    }

    /**
     * Set the date value.
     *
     * @param date
     *         the date value to set.
     *
     * @return the MessageIDUpdateHeaders object itself.
     */
    public MessageIDUpdateHeaders withDate(OffsetDateTime date) {
        if (date == null) {
            this.date = null;
        } else {
            this.date = new DateTimeRfc1123(date);
        }
        return this;
    }

    /**
     * Get the popReceipt value.
     *
     * @return the popReceipt value.
     */
    public String popReceipt() {
        return this.popReceipt;
    }

    /**
     * Set the popReceipt value.
     *
     * @param popReceipt
     *         the popReceipt value to set.
     *
     * @return the MessageIDUpdateHeaders object itself.
     */
    public MessageIDUpdateHeaders withPopReceipt(String popReceipt) {
        this.popReceipt = popReceipt;
        return this;
    }

    /**
     * Get the timeNextVisible value.
     *
     * @return the timeNextVisible value.
     */
    public OffsetDateTime timeNextVisible() {
        if (this.timeNextVisible == null) {
            return null;
        }
        return this.timeNextVisible.dateTime();
    }

    /**
     * Set the timeNextVisible value.
     *
     * @param timeNextVisible
     *         the timeNextVisible value to set.
     *
     * @return the MessageIDUpdateHeaders object itself.
     */
    public MessageIDUpdateHeaders withTimeNextVisible(OffsetDateTime timeNextVisible) {
        if (timeNextVisible == null) {
            this.timeNextVisible = null;
        } else {
            this.timeNextVisible = new DateTimeRfc1123(timeNextVisible);
        }
        return this;
    }
}
